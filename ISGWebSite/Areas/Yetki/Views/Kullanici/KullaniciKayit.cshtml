@model ISGWebSite.Models.Yetki.Kullanici.KullaniciModel

@{
    if (Model != null && Model.IslemDurum != "H")
    {
        // using (Html.BeginForm())
        using (Html.BeginForm("KullaniciKayit", "Kullanici", new { area = "Yetki" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-row">
                <div class="form-group col-md-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Ad, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="form-group col-md-6">
                    @Html.EditorFor(model => model.Ad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Soyad, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="form-group col-md-6">
                    @Html.EditorFor(model => model.Soyad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Soyad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.KullaniciAd, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="form-group col-md-6">
                    @Html.EditorFor(model => model.KullaniciAd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KullaniciAd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.KullaniciTipNoUzunAd, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="form-group col-md-6">
                    @Html.EditorFor(model => model.KullaniciTipNoUzunAd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KullaniciTipNoUzunAd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                </div>
                <div class="form-group col-md-6">
                    <button type="submit" class="btn btn-lg btn-primary">
                        <span class="fa fa-save" style="padding-right:15px"></span>Kaydet
                    </button>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger">
            Kullanıcı kaydına ulaşılamadı
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}